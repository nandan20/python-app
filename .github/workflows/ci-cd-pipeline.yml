name: Deploy to Minikube via ArgoCD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io  # Change to your registry (e.g., docker.io, ghcr.io, ECR)
  IMAGE_NAME: my-app
  ARGOCD_SERVER: "https://1f89-2401-4900-1cb8-a939-a4ef-1383-6429-f4e7.ngrok-free.app:443"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build -t $REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME:latest .
          docker tag $REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME:latest $REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME:${{ github.sha }}

      - name: Push Docker image to registry
        run: |
          docker push $REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME:latest
          docker push $REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME:${{ github.sha }}

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Validate ArgoCD Connectivity
        run: |
          echo "Checking connectivity to ArgoCD Server..."
          if ! curl -k -I --connect-timeout 10 "$ARGOCD_SERVER"; then
            echo "ERROR: Cannot reach ArgoCD server at $ARGOCD_SERVER"
            exit 1
          fi

      - name: Log in to ArgoCD
        run: |
          argocd login "$ARGOCD_SERVER" \
            --username="${{ secrets.ARGOCD_USER }}" \
            --password="${{ secrets.ARGOCD_PASSWORD }}" \
            --insecure --grpc-web

      - name: Update ArgoCD application with new image
        run: |
          argocd app set my-argocd-app \
            --parameter "image.tag=${{ github.sha }}" \
            --parameter "image.repository=$REGISTRY/${{ secrets.REGISTRY_USERNAME }}/$IMAGE_NAME"

      - name: Sync and Deploy via ArgoCD
        run: |
          argocd app sync my-argocd-app --prune --grpc-web

      - name: Check Deployment Status
        run: |
          argocd app wait my-argocd-app --timeout 300 --grpc-web
